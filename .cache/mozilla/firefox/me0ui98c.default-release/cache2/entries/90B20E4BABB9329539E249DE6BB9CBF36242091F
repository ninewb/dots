/*
 * doctools.js
 * ~~~~~~~~~~~
 *
 * Sphinx JavaScript utilities for all documentation.
 *
 * :copyright: Copyright 2007-2019 by the Sphinx team, see AUTHORS.
 * :license: BSD, see LICENSE for details.
 *
 */

/**
 * select a different prefix for underscore
 */
$u = _.noConflict();

/**
 * make the code below compatible with browsers without
 * an installed firebug like debugger
if (!window.console || !console.firebug) {
  var names = ["log", "debug", "info", "warn", "error", "assert", "dir",
    "dirxml", "group", "groupEnd", "time", "timeEnd", "count", "trace",
    "profile", "profileEnd"];
  window.console = {};
  for (var i = 0; i < names.length; ++i)
    window.console[names[i]] = function() {};
}
 */

/**
 * small helper function to urldecode strings
 */
jQuery.urldecode = function(x) {
  return decodeURIComponent(x).replace(/\+/g, ' ');
};

/**
 * small helper function to urlencode strings
 */
jQuery.urlencode = encodeURIComponent;

/**
 * This function returns the parsed url parameters of the
 * current request. Multiple values per key are supported,
 * it will always return arrays of strings for the value parts.
 */
jQuery.getQueryParameters = function(s) {
  if (typeof s === 'undefined')
    s = document.location.search;
  var parts = s.substr(s.indexOf('?') + 1).split('&');
  var result = {};
  for (var i = 0; i < parts.length; i++) {
    var tmp = parts[i].split('=', 2);
    var key = jQuery.urldecode(tmp[0]);
    var value = jQuery.urldecode(tmp[1]);
    if (key in result)
      result[key].push(value);
    else
      result[key] = [value];
  }
  return result;
};

/**
 * highlight a given string on a jquery object by wrapping it in
 * span elements with the given class name.
 */
jQuery.fn.highlightText = function(text, className) {
  function highlight(node, addItems) {
    if (node.nodeType === 3) {
      var val = node.nodeValue;
      var pos = val.toLowerCase().indexOf(text);
      if (pos >= 0 &&
          !jQuery(node.parentNode).hasClass(className) &&
          !jQuery(node.parentNode).hasClass("nohighlight")) {
        var span;
        var isInSVG = jQuery(node).closest("body, svg, foreignObject").is("svg");
        if (isInSVG) {
          span = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
        } else {
          span = document.createElement("span");
          span.className = className;
        }
        span.appendChild(document.createTextNode(val.substr(pos, text.length)));
        node.parentNode.insertBefore(span, node.parentNode.insertBefore(
          document.createTextNode(val.substr(pos + text.length)),
          node.nextSibling));
        node.nodeValue = val.substr(0, pos);
        if (isInSVG) {
          var bbox = span.getBBox();
          var rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
       	  rect.x.baseVal.value = bbox.x;
          rect.y.baseVal.value = bbox.y;
          rect.width.baseVal.value = bbox.width;
          rect.height.baseVal.value = bbox.height;
          rect.setAttribute('class', className);
          var parentOfText = node.parentNode.parentNode;
          addItems.push({
              "parent": node.parentNode,
              "target": rect});
        }
      }
    }
    else if (!jQuery(node).is("button, select, textarea")) {
      jQuery.each(node.childNodes, function() {
        highlight(this, addItems);
      });
    }
  }
  var addItems = [];
  var result = this.each(function() {
    highlight(this, addItems);
  });
  for (var i = 0; i < addItems.length; ++i) {
    jQuery(addItems[i].parent).before(addItems[i].target);
  }
  return result;
};

/*
 * backward compatibility for jQuery.browser
 * This will be supported until firefox bug is fixed.
 */
if (!jQuery.browser) {
  jQuery.uaMatch = function(ua) {
    ua = ua.toLowerCase();

    var match = /(chrome)[ \/]([\w.]+)/.exec(ua) ||
      /(webkit)[ \/]([\w.]+)/.exec(ua) ||
      /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
      /(msie) ([\w.]+)/.exec(ua) ||
      ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) ||
      [];

    return {
      browser: match[ 1 ] || "",
      version: match[ 2 ] || "0"
    };
  };
  jQuery.browser = {};
  jQuery.browser[jQuery.uaMatch(navigator.userAgent).browser] = true;
}

/**
 * Small JavaScript module for the documentation.
 */
var Documentation = {

  init : function() {
    this.fixFirefoxAnchorBug();
    this.highlightSearchWords();
    this.initIndexTable();
    if (DOCUMENTATION_OPTIONS.NAVIGATION_WITH_KEYS) {
      this.initOnKeyListeners();
    }
  },

  /**
   * i18n support
   */
  TRANSLATIONS : {},
  PLURAL_EXPR : function(n) { return n === 1 ? 0 : 1; },
  LOCALE : 'unknown',

  // gettext and ngettext don't access this so that the functions
  // can safely bound to a different name (_ = Documentation.gettext)
  gettext : function(string) {
    var translated = Documentation.TRANSLATIONS[string];
    if (typeof translated === 'undefined')
      return string;
    return (typeof translated === 'string') ? translated : translated[0];
  },

  ngettext : function(singular, plural, n) {
    var translated = Documentation.TRANSLATIONS[singular];
    if (typeof translated === 'undefined')
      return (n == 1) ? singular : plural;
    return translated[Documentation.PLURALEXPR(n)];
  },

  addTranslations : function(catalog) {
    for (var key in catalog.messages)
      this.TRANSLATIONS[key] = catalog.messages[key];
    this.PLURAL_EXPR = new Function('n', 'return +(' + catalog.plural_expr + ')');
    this.LOCALE = catalog.locale;
  },

  /**
   * add context elements like header anchor links
   */
  addContextElements : function() {
    $('div[id] > :header:first').each(function() {
      $('<a class="headerlink">\u00B6</a>').
      attr('href', '#' + this.id).
      attr('title', _('Permalink to this headline')).
      appendTo(this);
    });
    $('dt[id]').each(function() {
      $('<a class="headerlink">\u00B6</a>').
      attr('href', '#' + this.id).
      attr('title', _('Permalink to this definition')).
      appendTo(this);
    });
  },

  /**
   * workaround a firefox stupidity
   * see: https://bugzilla.mozilla.org/show_bug.cgi?id=645075
   */
  fixFirefoxAnchorBug : function() {
    if (document.location.hash && $.browser.mozilla)
      window.setTimeout(function() {
        document.location.href += '';
      }, 10);
  },

  /**
   * highlight the search words provided in the url in the text
   */
  highlightSearchWords : function() {
    var params = $.getQueryParameters();
    var terms = (params.highlight) ? params.highlight[0].split(/\s+/) : [];
    if (terms.length) {
      var body = $('div.body');
      if (!body.length) {
        body = $('body');
      }
      window.setTimeout(function() {
        $.each(terms, function() {
          body.highlightText(this.toLowerCase(), 'highlighted');
        });
      }, 10);
      $('<p class="highlight-link"><a href="javascript:Documentation.' +
        'hideSearchWords()">' + _('Hide Search Matches') + '</a></p>')
          .appendTo($('#searchbox'));
    }
  },

  /**
   * init the domain index toggle buttons
   */
  initIndexTable : function() {
    var togglers = $('img.toggler').click(function() {
      var src = $(this).attr('src');
      var idnum = $(this).attr('id').substr(7);
      $('tr.cg-' + idnum).toggle();
      if (src.substr(-9) === 'minus.png')
        $(this).attr('src', src.substr(0, src.length-9) + 'plus.png');
      else
        $(this).attr('src', src.substr(0, src.length-8) + 'minus.png');
    }).css('display', '');
    if (DOCUMENTATION_OPTIONS.COLLAPSE_INDEX) {
        togglers.click();
    }
  },

  /**
   * helper function to hide the search marks again
   */
  hideSearchWords : function() {
    $('#searchbox .highlight-link').fadeOut(300);
    $('span.highlighted').removeClass('highlighted');
  },

  /**
   * make the url absolute
   */
  makeURL : function(relativeURL) {
    return DOCUMENTATION_OPTIONS.URL_ROOT + '/' + relativeURL;
  },

  /**
   * get the current relative url
   */
  getCurrentURL : function() {
    var path = document.location.pathname;
    var parts = path.split(/\//);
    $.each(DOCUMENTATION_OPTIONS.URL_ROOT.split(/\//), function() {
      if (this === '..')
        parts.pop();
    });
    var url = parts.join('/');
    return path.substring(url.lastIndexOf('/') + 1, path.length - 1);
  },

  initOnKeyListeners: function() {
    $(document).keyup(function(event) {
      var activeElementType = document.activeElement.tagName;
      // don't navigate when in search box or textarea
      if (activeElementType !== 'TEXTAREA' && activeElementType !== 'INPUT' && activeElementType !== 'SELECT') {
        switch (event.keyCode) {
          case 37: // left
            var prevHref = $('link[rel="prev"]').prop('href');
            if (prevHref) {
              window.location.href = prevHref;
              return false;
            }
          case 39: // right
            var nextHref = $('link[rel="next"]').prop('href');
            if (nextHref) {
              window.location.href = nextHref;
              return false;
            }
        }
      }
    });
  }
};

// quick alias for translations
_ = Documentation.gettext;

$(document).ready(function() {
  Documentation.init();
});
ÅíèMj7      ]ùE]ùEA#:…]ùG]   9    :https://archlabslinux.gitlab.io/docs/_static/doctools.js necko:classified 1 strongly-framed 1 security-info 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 request-method GET response-head HTTP/2.0 200 OK
accept-ranges: bytes
cache-control: max-age=600
content-type: application/javascript
expires: Wed, 18 Dec 2019 02:23:43 UTC
last-modified: Sat, 31 Aug 2019 18:30:21 GMT
vary: Origin
content-length: 9313
date: Wed, 18 Dec 2019 02:13:43 GMT
X-Firefox-Spdy: h2
 original-response-headers accept-ranges: bytes
cache-control: max-age=600
content-type: application/javascript
expires: Wed, 18 Dec 2019 02:23:43 UTC
last-modified: Sat, 31 Aug 2019 18:30:21 GMT
vary: Origin
content-length: 9313
date: Wed, 18 Dec 2019 02:13:43 GMT
X-Firefox-Spdy: h2
 ctid 2 eTLD1Access 1;0;617074255, uncompressed-len 0 net-response-time-onstart 161 net-response-time-onstop 177   $a